type User {
  id: ID!
  name: String!
  email: String!
  role: Role!
  cvs: [CV!]!
}

enum Role {
  USER
  ADMIN
}

type CV {
  id: ID!
  name: String!
  age: Int!
  job: String!
  user: User!
  skills: [Skill!]!
}

type Skill {
  id: ID!
  designation: String!
  cvs: [CV!]!
}

type Query {
  getAllCVs: [CV!]!
  getCVById(id: ID!): CV
}

type cvEventObject{
  type: String!
  cv: CV!
}

type Subscription {
  cvEvent: cvEventObject!
}

input AddCVInput {
  name: String!
  age: Int!
  job: String!
  userId: ID!
  skillIds: [ID!]!
}

input UpdateCVInput {
  id: ID!
  name: String
  age: Int
  job: String
  userId: ID
  skillIds: [ID!]
}

type Mutation {
  addCV(addCVInput: AddCVInput!): CV!
  updateCV(updateCVInput : UpdateCVInput!): CV!
  deleteCV(id: ID!): CV!
}

